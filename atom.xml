<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://liuyong.github.io/</id>
    <title>刘永的博客</title>
    <updated>2020-05-25T10:57:03.518Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://liuyong.github.io/"/>
    <link rel="self" href="https://liuyong.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://liuyong.github.io/images/avatar.png</logo>
    <icon>https://liuyong.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 刘永的博客</rights>
    <entry>
        <title type="html"><![CDATA[模块化]]></title>
        <id>https://liuyong.github.io/post/mo-kuai-hua/</id>
        <link href="https://liuyong.github.io/post/mo-kuai-hua/">
        </link>
        <updated>2020-05-25T03:03:11.000Z</updated>
        <content type="html"><![CDATA[<h2 id="面试题为什么要使用模块化都有哪几种方式可以实现模块化各有什么特点">面试题：为什么要使用模块化？都有哪几种方式可以实现模块化，各有什么特点？</h2>
<p>使用一个技术肯定是有原因的，那么使用模块化可以给我们带来以下好处</p>
<ul>
<li>解决命名冲突</li>
<li>提供复用性</li>
<li>提高代码可维护性</li>
</ul>
<h3 id="立即执行函数">立即执行函数</h3>
<p>在早期，使用立即执行函数实现模块化是常见的手段，通过函数作用域解决了命名冲突、污染全局作用域的问题</p>
<pre><code>(function(globalVariable){
globalVariable.test = function() {}
// ... 声明各种变量、函数都不会污染全局作用域
})(globalVariable)
</code></pre>
]]></content>
    </entry>
</feed>